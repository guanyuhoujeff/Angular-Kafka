{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"create",
				"createConsumer"
			],
			[
				"mem",
				"memberId"
			],
			[
				"par",
				"partitionerSpy"
			],
			[
				"fetc",
				"fetchPromise"
			],
			[
				"met",
				"metadataLength"
			],
			[
				"nex",
				"nextCorrelationId"
			],
			[
				"corre",
				"correlationId"
			],
			[
				"prot",
				"protocol"
			],
			[
				"messageSe",
				"messageSetSize\t(fetch.js)"
			],
			[
				"messa",
				"messageSet"
			],
			[
				"max",
				"maxAttempts"
			],
			[
				"pa",
				"partition"
			],
			[
				"not",
				"notfoundOK"
			],
			[
				"f",
				"f\tAnonymous Function"
			],
			[
				"rec",
				"reconnectionDelay"
			],
			[
				"on",
				"onConnect"
			],
			[
				"conn",
				"connectionTimeout"
			],
			[
				"host",
				"hostStr"
			],
			[
				"connection",
				"connectionString"
			],
			[
				"conne",
				"connectionString"
			],
			[
				"Base",
				"BaseConsumer"
			],
			[
				"Gro",
				"GroupConsumer"
			],
			[
				"Def",
				"DefaultAssignmentStrategy"
			],
			[
				"De",
				"DefaultAssignmentStrategy"
			],
			[
				"Con",
				"ConsistentAssignmentStrategy"
			],
			[
				"_hear",
				"_heartbeatTimeout"
			],
			[
				"_fet",
				"_fetchTimeout"
			],
			[
				"hea",
				"heartbeatTimeout"
			],
			[
				"kafka-",
				"kafka-test-topic"
			],
			[
				"GroupC",
				"GroupCoordinatorNotAvailable"
			],
			[
				"sub",
				"subscriptions"
			],
			[
				"decom",
				"decompressAsync"
			],
			[
				"asyn",
				"asyncCompression"
			],
			[
				"syn",
				"syncPartitionMessageSet"
			],
			[
				"compress",
				"compressionPromises"
			],
			[
				"SN",
				"SNAPPY_MAGIC2"
			],
			[
				"Kaf",
				"KafkaCompressionProtocol"
			],
			[
				"Ka",
				"KafkaProtocol"
			],
			[
				"Mess",
				"MessageSetItem"
			],
			[
				"snap",
				"snappyIsChunked"
			],
			[
				"data",
				"dataHandlerSpies"
			],
			[
				"att",
				"attempt"
			],
			[
				"maxBY",
				"maxBytesTestMessagesSize"
			],
			[
				"err",
				"errors"
			],
			[
				"_update",
				"_updateSubscription"
			],
			[
				"Lea",
				"LeaderNotAvailable"
			],
			[
				"genera",
				"generationId"
			],
			[
				"lis",
				"listenerFactory"
			],
			[
				"req",
				"request"
			],
			[
				"Gr",
				"GroupConsumer"
			],
			[
				"updat",
				"updateMetadata"
			],
			[
				"upda",
				"updateMetadata"
			],
			[
				"group",
				"groupId"
			],
			[
				"subscr",
				"subscriptions"
			],
			[
				"fet",
				"fetchOffset"
			],
			[
				"_off",
				"_offsetFetchRequest"
			],
			[
				"offsetRe",
				"offsetRequests"
			],
			[
				"offs",
				"offsetRequests"
			],
			[
				"gene",
				"generationId"
			],
			[
				"subsc",
				"subscriptions"
			],
			[
				"ass",
				"assignments"
			],
			[
				"assign",
				"assignmentFn"
			],
			[
				"gr",
				"groupId"
			],
			[
				"_s",
				"_syncGroup"
			],
			[
				"strate",
				"strategies"
			],
			[
				"_prepa",
				"_prepareTopicRequests"
			],
			[
				"sess",
				"sessionTimeout"
			],
			[
				"upd",
				"updateMetadata"
			],
			[
				"topi",
				"topicMetadata"
			],
			[
				"brok",
				"brokerConnections"
			],
			[
				"mes",
				"messageSet"
			],
			[
				"part",
				"partitionAssignment"
			],
			[
				"kafk",
				"kafkaOffset"
			],
			[
				"_pre",
				"_prepareFetchRequest"
			],
			[
				"_prep",
				"_prepareFetchRequest"
			],
			[
				"pro",
				"produceRequest"
			],
			[
				"time",
				"timeout"
			],
			[
				"requ",
				"requiredAcks"
			],
			[
				"Pro",
				"ProduceRequest"
			],
			[
				"bro",
				"brokerConnections"
			],
			[
				"top",
				"topicMetadata"
			],
			[
				"ini",
				"initialBrokers"
			],
			[
				"meta",
				"metadataRequest"
			],
			[
				"prop",
				"propertyName"
			],
			[
				"res",
				"responseBuffer"
			],
			[
				"Int",
				"Int32BE"
			],
			[
				"prim",
				"primitiveMethod"
			],
			[
				"kaf",
				"kafkaClient"
			],
			[
				"upl",
				"uploadDir"
			],
			[
				"vide",
				"videoFilename"
			],
			[
				"iden",
				"identifyFn"
			],
			[
				"er",
				"errors"
			],
			[
				"loa",
				"loadBillingPlans"
			],
			[
				"request",
				"requestProcessingSettings"
			],
			[
				"reques",
				"requestProcessingSettings"
			],
			[
				"spinFil",
				"spinFilename"
			],
			[
				"mime",
				"mimetypeToFormat"
			],
			[
				"quey",
				"queryOptions"
			],
			[
				"manual",
				"manualPayments"
			],
			[
				"mark",
				"markInvoiceAsPaid"
			],
			[
				"sett",
				"settings"
			],
			[
				"que",
				"queryOptions"
			],
			[
				"sign",
				"signupErr"
			],
			[
				"calcu",
				"calculateStorageUsed"
			],
			[
				"proc",
				"processingSettings"
			],
			[
				"SIRV",
				"SIRV_ACCOUNT"
			],
			[
				"pat",
				"patternMatch"
			],
			[
				"sch",
				"schemas"
			],
			[
				"origi",
				"originalFormat"
			],
			[
				"report",
				"reportType"
			],
			[
				"sour",
				"sourceValue"
			],
			[
				"plan",
				"planId"
			],
			[
				"ena",
				"enableBillingPlanFeatures"
			],
			[
				"thum",
				"thumbImage"
			],
			[
				"thu",
				"thumbImage"
			],
			[
				"bucke",
				"bucketName"
			],
			[
				"atta",
				"attachment"
			],
			[
				"invoice",
				"invoiceId"
			],
			[
				"cal",
				"calculateStorageUsed"
			],
			[
				"A",
				"ApiNotSupportedError"
			],
			[
				"orig",
				"originalUrl"
			],
			[
				"read",
				"readStream"
			],
			[
				"accoun",
				"accountsByIdCache"
			],
			[
				"bor",
				"borderWidth"
			],
			[
				"inv",
				"invoiceId"
			],
			[
				"ApiE",
				"ApiNotFoundError"
			],
			[
				"APi",
				"ApiNotFoundError"
			],
			[
				"_new",
				"_newStorageUsed"
			]
		]
	},
	"buffers":
	[
		{
			"file": "._testing/consumer.js",
			"settings":
			{
				"buffer_size": 645,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/base_consumer.js",
			"settings":
			{
				"buffer_size": 8350,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": ".travis.yml",
			"settings":
			{
				"buffer_size": 2568,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/connection.js",
			"settings":
			{
				"buffer_size": 6040,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/client.js",
			"settings":
			{
				"buffer_size": 28544,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 203.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"git bra",
				"git: branch"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"git ame",
				"git: amend previous commit"
			],
			[
				"git reb",
				"git: rebase"
			],
			[
				"git stas",
				"git: status"
			],
			[
				"up",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"gene",
				"Set Syntax: Generic Config"
			],
			[
				"repl node",
				"SublimeREPL: Node"
			],
			[
				"ctags",
				"CTags: Rebuild Tags"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"git amm",
				"git: amend previous commit"
			],
			[
				"upgr",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"git reba",
				"git: rebase"
			],
			[
				"ame",
				"git: amend previous commit"
			],
			[
				"erla",
				"Set Syntax: Erlang"
			],
			[
				"upga",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"git tag",
				"git: quick tag"
			],
			[
				"remoe",
				"Package Control: Remove Package"
			],
			[
				"repl erl",
				"SublimeREPL: Erlang"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"jscs",
				"JSCS Formatter: Format this file"
			],
			[
				"js",
				"JSCS Formatter: Format this file"
			],
			[
				"githe",
				"GitSavvy: help"
			],
			[
				"replno",
				"SublimeREPL: Node"
			],
			[
				"work",
				"Worksheet: Evaluate worksheet"
			],
			[
				"mar",
				"Set Syntax: Markdown Extended"
			],
			[
				"upgra",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"git br",
				"git: branch"
			],
			[
				"upg",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"upd",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"rebase",
				"git: rebase"
			],
			[
				"amed",
				"git: amend previous commit"
			],
			[
				"git cha",
				"git: generate changelog"
			],
			[
				"git log",
				"git: log"
			],
			[
				"amm",
				"git: amend previous commit"
			],
			[
				"serl",
				"Set Syntax: Erlang"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"sft",
				"SFTP: Browse Server…"
			],
			[
				"sftp",
				"SFTP: Browse Server…"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"repa",
				"DocBlockr: Reparse comment block"
			],
			[
				"amme",
				"git: amend previous commit"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"merge",
				"Snippet: Merge options with defaults"
			],
			[
				"deco",
				"DocBlockr: Decorate line comment"
			],
			[
				"dec",
				"DocBlockr: Decorate line comment"
			],
			[
				"bra",
				"git: branch"
			],
			[
				"pull",
				"Github: Create Pull Request"
			],
			[
				"git ta",
				"git: tags"
			],
			[
				"git bla",
				"git: blame current file"
			],
			[
				"git tags",
				"git: tags"
			],
			[
				"gith",
				"github: open file on remote"
			],
			[
				"github",
				"Github: Open File"
			],
			[
				"GIT BRA",
				"git: branch"
			],
			[
				"syntarub",
				"Set Syntax: Ruby"
			],
			[
				"reve",
				"File: Reveal"
			],
			[
				"repar",
				"DocBlockr: Reparse comment block"
			],
			[
				"am",
				"git: amend previous commit"
			],
			[
				"comm",
				"git: commit"
			],
			[
				"bran",
				"git: branch"
			],
			[
				"conf",
				"Set Syntax: Generic Config"
			],
			[
				"defa",
				"Snippet: Merge options with defaults"
			],
			[
				"forma",
				"Format: Javascript"
			],
			[
				"githma",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"mark",
				"Set Syntax: Markdown Extended"
			],
			[
				"javasc",
				"Set Syntax: JavaScript"
			],
			[
				"upgrade",
				"Package Control: Upgrade Package"
			],
			[
				"repo",
				"Github: Repository"
			],
			[
				"setsynmar",
				"Set Syntax: Markdown Extended"
			],
			[
				"setsyyam",
				"Set Syntax: YAML"
			],
			[
				"gitbl",
				"git: blame current file"
			],
			[
				"githu",
				"Github: Repository"
			],
			[
				"blame",
				"git: blame current file"
			],
			[
				"gist",
				"Gist: Create Public Gist"
			],
			[
				"gistcr",
				"Gist: Create Public Gist"
			],
			[
				"gis",
				"Gist: Create Private Gist"
			],
			[
				"amen",
				"git: amend previous commit"
			],
			[
				"git",
				"git: status"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"githubre",
				"Github: Repository"
			],
			[
				"git fet",
				"git: fetch"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"git lo",
				"git: log"
			],
			[
				"git ",
				"git: log"
			],
			[
				"git sta",
				"git: status"
			],
			[
				"tags",
				"git: tags"
			],
			[
				"git stat",
				"git: status"
			],
			[
				"git blm",
				"git: blame current file"
			],
			[
				"gitlo",
				"git: log by author"
			],
			[
				"gitsa",
				"GitSavvy: help"
			],
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"synjava",
				"Set Syntax: JavaScript"
			],
			[
				"rep",
				"SublimeREPL: Node"
			],
			[
				"re",
				"DocBlockr: Reparse comment block"
			],
			[
				"JS",
				"Set Syntax: JSON"
			],
			[
				"snipcry",
				"Snippet: crypto.createHash"
			],
			[
				"packa",
				"Preferences: Package Control Settings – Default"
			],
			[
				"git am",
				"Git: Amend Commit"
			],
			[
				"ali",
				"AlignTab: Table Mode"
			],
			[
				"align",
				"AlignTab: Table Mode"
			],
			[
				"ajava",
				"Set Syntax: JavaScript"
			],
			[
				"it log",
				"Git: Log"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"uo",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"CSS",
				"Set Syntax: CSS"
			],
			[
				"doc",
				"DocBlockr: Reparse comment block"
			],
			[
				"syn java",
				"Set Syntax: JavaScript"
			],
			[
				"synta javas",
				"Set Syntax: JavaScript"
			],
			[
				"syn json",
				"Set Syntax: JSON"
			],
			[
				"ste syn yam",
				"Set Syntax: YAML"
			],
			[
				"synta json",
				"Set Syntax: JSON"
			],
			[
				"ste synt json",
				"Set Syntax: JSON"
			],
			[
				"ste syntajson",
				"Set Syntax: JSON"
			],
			[
				"syn javas",
				"Set Syntax: JavaScript"
			],
			[
				"syn jso",
				"Set Syntax: JSON"
			],
			[
				"upda",
				"Package Control: Upgrade Package"
			],
			[
				"ste syn yaml",
				"Set Syntax: YAML"
			],
			[
				"set syn ya",
				"Set Syntax: YAML"
			],
			[
				"synta java",
				"Set Syntax: JavaScript"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"sftpbr",
				"SFTP: Browse Server…"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"syn ja",
				"Set Syntax: JavaScript"
			],
			[
				"list p",
				"Package Control: List Packages"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"repl",
				"SublimeREPL: PHP"
			]
		],
		"width": 678.0
	},
	"console":
	{
		"height": 336.0,
		"history":
		[
			"sublime.set_clipboard(view.syntax_name(view.sel()[0].b))",
			"help()",
			"help",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/oleksiy/src/kafka",
		"/Users/oleksiy/src/kafka/lib"
	],
	"file_history":
	[
		"/Users/oleksiy/src/kafka/package.json",
		"/Users/oleksiy/src/kafka/lib/group_consumer.js",
		"/Users/oleksiy/src/kafka/.travis.yml",
		"/Users/oleksiy/src/kafka/._testing/producer.js",
		"/Users/oleksiy/src/kafka/lib/protocol/common.js",
		"/Users/oleksiy/src/kafka/lib/producer.js",
		"/Users/oleksiy/src/kafka/lib/assignment/partitioners/hash_crc32.js",
		"/Users/oleksiy/src/kafka/lib/assignment/partitioners/default.js",
		"/Users/oleksiy/src/kafka/lib/protocol/produce.js",
		"/Users/oleksiy/src/kafka/._testing/loadmsg.js",
		"/Users/oleksiy/src/kafka/._testing/test.js",
		"/Users/oleksiy/src/kafka/test/06.strategies.js",
		"/Users/oleksiy/src/kafka/lib/assignment/strategies/default.js",
		"/Users/oleksiy/src/kafka/test/01.producer.js",
		"/Users/oleksiy/src/kafka/lib/base_consumer.js",
		"/Users/oleksiy/src/kafka/test/05.other.js",
		"/Users/oleksiy/src/kafka/lib/protocol/group_membership.js",
		"/Users/oleksiy/src/kafka/._testing/group_consumer.js",
		"/Users/oleksiy/src/kafka/README.md",
		"/Users/oleksiy/src/sirv/.git/MERGE_MSG",
		"/Users/oleksiy/src/kafka/._testing/consumer.js",
		"/Users/oleksiy/Library/Caches/Cleanup At Startup/Transmit/B93473E9-A836-4287-B49D-00EF9456AA43/.htaccess",
		"/Users/oleksiy/src/kafka/lib/errors.js",
		"/Users/oleksiy/src/kafka/lib/connection.js",
		"/Users/oleksiy/src/kafka/lib/client.js",
		"/Users/oleksiy/Library/Caches/Cleanup At Startup/Transmit/46E84323-D889-4F29-BF2A-B75DD2A7A39C/.htaccess",
		"/Users/oleksiy/src/kafka/test/02.simple_consumer.js",
		"/Users/oleksiy/src/kafka/test/04.group_admin.js",
		"/Users/oleksiy/src/kafka/lib/bluebird-configured.js",
		"/Users/oleksiy/src/kafka/lib/index.js",
		"/Users/oleksiy/src/kafka/node_modules/bluebird/js/release/debuggability.js",
		"/Users/oleksiy/src/kafka/node_modules/bluebird/js/release/promise.js",
		"/Users/oleksiy/Downloads/cdn_sirvice_kr/cdn_sirvice_kr.crt",
		"/Users/oleksiy/src/kafka/lib/protocol/admin.js",
		"/Users/oleksiy/src/kafka/lib/assignment/strategies/consistent.js",
		"/Users/oleksiy/src/kafka/test/03.group_consumer.js",
		"/Users/oleksiy/src/kafka/lib/group_admin.js",
		"/Users/oleksiy/src/kafka/test/08.connection.js",
		"/Users/oleksiy/src/kafka/test/09.partitioners.js",
		"/Users/oleksiy/src/kafka/lib/simple_consumer.js",
		"/Users/oleksiy/src/kafka/lib/protocol/globals.js",
		"/Users/oleksiy/src/kafka/.git/COMMIT_EDITMSG",
		"/Users/oleksiy/src/kafka/.git/rebase-merge/git-rebase-todo",
		"/Users/oleksiy/src/kafka/lib/protocol/misc/crc32.js",
		"/Users/oleksiy/src/kafka/lib/protocol/index.js",
		"/Users/oleksiy/src/kafka/test/07.compression.js",
		"/Users/oleksiy/src/kafka/lib/protocol/metadata.js",
		"/Users/oleksiy/src/kafka/.git/MERGE_MSG",
		"/Users/oleksiy/src/kafka/CHANGELOG.md",
		"/Users/oleksiy/src/kafka/lib/protocol/fetch.js",
		"/Users/oleksiy/src/tmp/no-kafka-test-case/index.js",
		"/Users/oleksiy/src/tmp/kafka_2.11-0.10.0.0/config/server.properties",
		"/usr/local/sirv/etc/kafka/server.properties",
		"/usr/local/etc/kafka/server.properties",
		"/Users/oleksiy/Dropbox/Misc/Sublime Text.blue.icns",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/Tomorrow-Night (Oleksiy) (SL).tmTheme",
		"/Users/oleksiy/src/kafka/test/09.default_partitioner.js",
		"/Users/oleksiy/src/kafka/test/ssl/client.crt",
		"/Users/oleksiy/src/kafka/ECDHE-RSA-AES128-GCM-SHA256",
		"/Users/oleksiy/src/kafka/test/mocha.opts",
		"/Users/oleksiy/exercism/elixir/word-count/word_count.exs",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/CTags/CTags.sublime-settings",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/CTags.sublime-settings",
		"/Users/oleksiy/.gitignore_global",
		"/Users/oleksiy/.npmignore_global",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/Tabs.sublime-settings",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/Tabs/Tabs.sublime-settings",
		"/Users/oleksiy/src/kafka/.tags",
		"/Users/oleksiy/src/kafka/test.js",
		"/Users/oleksiy/src/kafka/Makefile",
		"/Users/oleksiy/src/kafka/consumer.js",
		"/Users/oleksiy/src/kafka/lib/assignment/strategies/weighted_round_robin.js",
		"/Users/oleksiy/src/kafka/lib/protocol/offset.js",
		"/Users/oleksiy/src/kafka/group_consumer.js",
		"/Users/oleksiy/src/kafka/.eslintrc",
		"/Users/oleksiy/src/kafka/producer.js",
		"/Users/oleksiy/.zshenv",
		"/Users/oleksiy/src/riakfs/.git/rebase-merge/git-rebase-todo",
		"/Users/oleksiy/src/kafka/.bithoundrc",
		"/Users/oleksiy/src/kafka/lib/protocol/misc/compression.js",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/SublimeREPL/config/NodeJS/repl.js",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/usr/local/sirv/src/riak-2.1.3/etc/advanced.config",
		"/Users/oleksiy/src/sirv/.git/COMMIT_EDITMSG",
		"/Users/oleksiy/src/sirv/.git/rebase-merge/git-rebase-todo",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/GitSavvy/GitSavvy.sublime-settings",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/GitSavvy.sublime-settings",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/JSCS-Formatter.sublime-settings",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/JSCS-Formatter/JSCS-Formatter.sublime-settings",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/Worksheet/worksheet.sublime-settings",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/worksheet.sublime-settings",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/oleksiy/.ssh/known_hosts",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/Tomorrow-Night (Oleksiy).tmTheme",
		"/Users/oleksiy/.local/share/mc/skins/oleksiy-tomorrow.ini",
		"/Users/oleksiy/.zshrc",
		"/Users/oleksiy/.bash_profile",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/JavaScript/promise-tap.sublime-snippet",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/JavaScript/promise-then.sublime-snippet",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/Tomorrow/Tomorrow-Night-Eighties.tmTheme",
		"/Users/oleksiy/Dropbox/Misc/Sublime Text.black.icns",
		"/Users/oleksiy/src/kafka/07.compression.js",
		"/Users/oleksiy/src/kafka/LICENSE",
		"/Users/oleksiy/src/kafka/.codeclimate.yml",
		"/Users/oleksiy/src/binary-protocol/.git/COMMIT_EDITMSG",
		"/Users/oleksiy/src/binary-protocol/.git/rebase-merge/git-rebase-todo",
		"/Users/oleksiy/src/no-riak/.git/rebase-merge/git-rebase-todo",
		"/Users/oleksiy/src/kafka/myproducer.js",
		"/Users/oleksiy/src/kafka/lib/protocol/offset_commit_fetch.js",
		"/Users/oleksiy/src/wrr-pool/.git/MERGE_MSG",
		"/Users/oleksiy/src/wrr-pool/.git/rebase-merge/git-rebase-todo",
		"/Users/oleksiy/src/kafka/test2.js",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/oleksiy/src/kafka/kafka.sublime-project",
		"/usr/local/Cellar/riak/2.1.2/libexec/etc/advanced.config",
		"/usr/local/Cellar/riak/2.1.2/libexec/etc/riak.conf",
		"/Users/oleksiy/.local/share/mc/skins/oleksiy-darkened.ini",
		"/Users/oleksiy/.local/share/mc/skins/candy.ini",
		"/Users/oleksiy/.local/share/mc/skins/darkened.ini",
		"/Users/oleksiy/.grc/conf.tail",
		"/usr/local/share/mc/skins/oleksiy.ini",
		"/Users/oleksiy/src/kafka/.gitignore",
		"/Users/oleksiy/src/kafka/build/test.js",
		"/Users/oleksiy/src/kafka/gulpfile.js",
		"/Users/oleksiy/src/kafka/build/coverage.js",
		"/Users/oleksiy/src/kafka/build/config.js"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"commitOffset",
			"findLeader",
			"getPartitionOffset",
			"recoveryOffset",
			"getPartitionOffset",
			"buffer-crc32",
			"buffer",
			"reconnectionDelay",
			"null",
			"if (err.length === 1) {",
			"throw err[0]",
			"if (err.length === 1) {",
			"_fullRejoin",
			"connection",
			"JoinConsumerGroupResponse",
			"OffsetResponse",
			"MetadataResponse",
			"LeaveGroupResponse",
			"HeartbeatResponse",
			"SyncConsumerGroupResponse",
			"SyncGroupResponse",
			"JoinConsumerGroupResponse",
			"JoinGroupResponse",
			"GroupCoordinatorResponse",
			"argument",
			"options",
			"UnknownTopicOrPartition",
			"getTopicPartitions",
			"errors.byName",
			"UnknownMemberId",
			"value",
			"null",
			"authe",
			"remain",
			"commitOffset",
			"idleTimeout",
			"GroupConsumer",
			"_fullRejoin",
			"longStackTraces",
			"forgo",
			"config",
			"_fullRejoin",
			"_heartbeat",
			"_heartbeatPromise",
			"updateMetadata",
			"rejectUnauthorized",
			"NoKafkaConnectionError",
			"startingOffset",
			"commitOffset",
			"paused",
			"_fetch",
			"_fetchPromise",
			".finished",
			".end",
			"delete",
			"group_protocols",
			"listgroup",
			"NotLeaderForPartition",
			"groupcoo",
			"recoveryOffset",
			"pick",
			"certFile: null, keyFile: null, certStr: null, keyStr: null",
			"ciphers",
			"pick",
			"certFile: null, keyFile: null",
			"size",
			"DefaultPartitioner",
			"manualPayments",
			"DefaultAssignmentStrategy",
			"pick",
			"let",
			"const",
			"HashCRC32Partitioner",
			"numPartitions",
			"DefaultPartitioner",
			"HashCRC32Partitioner",
			"DefaultPartitioner",
			"HashCRC32Partitioner",
			"MyPartitioner",
			"HashCRC32Partitioner",
			"MyPartitioner",
			"DefaultAssignmentStrategy",
			"DefaultPartitioner",
			"updateMetadata(",
			"updateMe",
			"fetch",
			"offset",
			"topic.partitionMetadata",
			"SSL",
			"<<<<",
			"remap",
			"parseInt",
			"caps",
			"correl",
			"this.co",
			"self.correlationId++",
			"brokerNullRemap",
			"this.queue",
			"self.corr",
			"self.c",
			"connection.send",
			"correlationId",
			"connection.send",
			"new Conn",
			"logFunc",
			"a814d8c",
			"maxBytes",
			"self.finished",
			"lastCall",
			"maxBytesTestMessagesSize",
			"maxBytes",
			"maxBy",
			"EARLIEST_OFFSET",
			"handlerConcurrency",
			"_kafka_connection_closed",
			"recoveryOffset",
			"messageSet",
			"errors",
			"payment failed",
			"offsetFetchRequestV2",
			"findLeader",
			"findL",
			"topicMetadata",
			"NotLeaderForPartition",
			"DefaultPartitioner",
			"_prepareProduceRequest",
			"getTopicPartitions",
			"toRetry"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\"",
			"app.config.imageMagick.limits",
			"noup",
			"ignore",
			"sublime.active_window()"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "._testing/consumer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 645,
						"regions":
						{
						},
						"selection":
						[
							[
								645,
								645
							]
						],
						"settings":
						{
							"SL.15.region_keys":
							[
							],
							"SL.676.region_keys":
							[
							],
							"SL.850.region_keys":
							[
							],
							"SL.869.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"easy_syntax_applied": true,
							"git_savvy.repo_path": "/Users/oleksiy/src/kafka",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "lib/base_consumer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8350,
						"regions":
						{
						},
						"selection":
						[
							[
								6617,
								6617
							]
						],
						"settings":
						{
							"SL.16.region_keys":
							[
							],
							"SL.389.region_keys":
							[
							],
							"SL.439.region_keys":
							[
							],
							"SL.462.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										6616,
										6617
									]
								},
								"icon":
								{
									"1":
									[
										"",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										6179,
										6180
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"easy_syntax_applied": true,
							"git_savvy.repo_path": "/Users/oleksiy/src/kafka",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": ".travis.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2568,
						"regions":
						{
						},
						"selection":
						[
							[
								37,
								37
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										37,
										38
									]
								},
								"icon":
								{
									"1":
									[
										"",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										32,
										33
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"easy_syntax_applied": true,
							"git_savvy.repo_path": "/Users/oleksiy/src/kafka",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/connection.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6040,
						"regions":
						{
						},
						"selection":
						[
							[
								5946,
								5946
							]
						],
						"settings":
						{
							"SL.18.region_keys":
							[
							],
							"SL.19.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5945,
										5946
									]
								},
								"icon":
								{
									"1":
									[
										"",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										5815,
										5816
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"easy_syntax_applied": true,
							"git_savvy.repo_path": "/Users/oleksiy/src/kafka",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28544,
						"regions":
						{
						},
						"selection":
						[
							[
								10207,
								10217
							]
						],
						"settings":
						{
							"SL.19.region_keys":
							[
							],
							"SL.20.region_keys":
							[
							],
							"SL.392.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"easy_syntax_applied": true,
							"git_savvy.file_path": "/Users/oleksiy/src/kafka/lib/client.js",
							"git_savvy.repo_path": "/Users/oleksiy/src/kafka",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4064.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GitSavvy":
	{
		"height": 102.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 102.0
	},
	"output.find_results":
	{
		"height": 102.0
	},
	"output.git-checkout":
	{
		"height": 102.0
	},
	"output.git-commit":
	{
		"height": 102.0
	},
	"output.git-custom":
	{
		"height": 102.0
	},
	"output.git-push":
	{
		"height": 102.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 102.0
	},
	"output.sftp":
	{
		"height": 102.0
	},
	"output.show_commit_info":
	{
		"height": 96.0
	},
	"pinned_build_system": "",
	"project": "kafka.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"COMMIT: kafka"
			],
			[
				"pack",
				"package.json"
			],
			[
				"06",
				"test/06.strategies.js"
			],
			[
				"04",
				"test/04.group_admin.js"
			],
			[
				"01",
				"test/01.producer.js"
			],
			[
				"clei",
				"lib/client.js"
			],
			[
				"partdefa",
				"lib/assignment/partitioners/default.js"
			],
			[
				"groip",
				"lib/group_admin.js"
			],
			[
				"clien",
				"lib/client.js"
			],
			[
				"libconn",
				"lib/connection.js"
			],
			[
				"clie",
				"lib/client.js"
			],
			[
				"conn",
				"lib/connection.js"
			],
			[
				"error",
				"lib/errors.js"
			],
			[
				"cli",
				"lib/client.js"
			],
			[
				"in",
				"lib/index.js"
			],
			[
				"test",
				"test.js"
			],
			[
				"base",
				"lib/base_consumer.js"
			],
			[
				"esl",
				".eslintrc"
			],
			[
				"pa",
				"package.json"
			],
			[
				"read",
				"README.md"
			],
			[
				"clin",
				"lib/client.js"
			],
			[
				"cl",
				"lib/client.js"
			],
			[
				"compre",
				"lib/protocol/misc/compression.js"
			],
			[
				"02",
				"test/02.simple_consumer.js"
			],
			[
				"te",
				"test.js"
			],
			[
				"gr",
				"group_consumer.js"
			],
			[
				"gro",
				"group_consumer.js"
			],
			[
				"grou",
				"lib/group_consumer.js"
			],
			[
				"comp",
				"lib/protocol/misc/compression.js"
			],
			[
				"prod",
				"producer.js"
			],
			[
				"con",
				"consumer.js"
			],
			[
				"all",
				"~/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings"
			],
			[
				"/",
				"~/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings"
			],
			[
				"pro",
				"producer.js"
			],
			[
				"com",
				"lib/protocol/common.js"
			],
			[
				"other",
				"test/05.other.js"
			],
			[
				"client",
				"lib/client.js"
			],
			[
				"group",
				"lib/group_consumer.js"
			],
			[
				"ba",
				"lib/base_consumer.js"
			],
			[
				"err",
				"lib/errors.js"
			],
			[
				"ad",
				"lib/admin.js"
			],
			[
				"pr",
				"lib/producer.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"simpl",
				"lib/simple_consumer.js"
			],
			[
				"cons",
				"consumer.js"
			],
			[
				"03",
				"test/03.group_consumer.js"
			],
			[
				"tes",
				"test.js"
			],
			[
				"glo",
				"lib/protocol/globals.js"
			],
			[
				"er",
				"lib/errors.js"
			],
			[
				"sirvtaskma",
				"ansible/roles/sirv-backend/tasks/main.yml"
			],
			[
				"testeve",
				"test/api/07.events.js"
			],
			[
				"apiusers",
				"api/services/users.js"
			],
			[
				"apieven",
				"api/services/events.js"
			],
			[
				"filesapp",
				"files/app.js"
			],
			[
				"serv",
				"ansible/roles/mac-develop/templates/service"
			],
			[
				"app",
				"app.js"
			],
			[
				"sirv-bamain",
				"ansible/roles/sirv-backend/tasks/main.yml"
			],
			[
				"binhe",
				"ansible/bin/hetzner"
			],
			[
				"sirv.js",
				"config/sirv.js"
			],
			[
				"het",
				"NEW_HETZNERS"
			],
			[
				"he",
				"ansible/inventory/hetzner"
			],
			[
				"hetzn",
				"ansible/inventory/hetzner"
			],
			[
				"apiimag",
				"api/services/images.js"
			],
			[
				"new",
				"NEW_HETZNERS"
			],
			[
				"50.ww",
				"ansible/roles/sirv-backend/templates/nginx/50.www.sirv.com.conf"
			],
			[
				"50",
				"ansible/roles/sirv-backend/templates/nginx/50.www.sirv.com.conf"
			],
			[
				"99",
				"ansible/roles/sirv-backend/templates/nginx/99.sirv.com.conf"
			],
			[
				"haproxy",
				"ansible/roles/haproxy/templates/haproxy.cfg"
			],
			[
				"nginx.c",
				"ansible/roles/openresty/templates/nginx.conf"
			],
			[
				"apiimages",
				"api/services/images.js"
			],
			[
				"filescon",
				"files/controller.js"
			],
			[
				"apiimage",
				"api/services/images.js"
			],
			[
				"scheacc",
				"api/schema/account.js"
			],
			[
				"openretyma",
				"ansible/roles/openresty/tasks/main.yml"
			],
			[
				"service",
				"ansible/roles/mac-develop/templates/service"
			],
			[
				"mactamai",
				"ansible/roles/mac-develop/tasks/main.yml"
			],
			[
				"riakfs",
				"riakfs.js"
			],
			[
				"apifiles",
				"api/services/files.js"
			],
			[
				"invoin",
				"pdf/invoice/index.jade"
			],
			[
				"filecontr",
				"files/controller.js"
			],
			[
				"filesc",
				"files/controller.js"
			],
			[
				"05.",
				"test/api/05.files.js"
			],
			[
				"buck",
				"ansible/roles/riak/templates/setup_riak_buckets.sh"
			],
			[
				"riak",
				"riak.js"
			],
			[
				"imagesche",
				"api/schema/image/schema.js"
			],
			[
				"spintile",
				"frontend-client/src/views/browse/spin.tile.jade"
			],
			[
				"schemim",
				"api/schema/image.js"
			],
			[
				"sirv",
				"sirv"
			],
			[
				"apiuser",
				"api/services/users.js"
			],
			[
				"apitokens",
				"api/services/tokens.js"
			],
			[
				"gm-im",
				"ansible/roles/gm-im/tasks/main.yml"
			],
			[
				"mac-de",
				"ansible/roles/mac-develop/tasks/main.yml"
			],
			[
				"aispin",
				"api/schema/spin.js"
			],
			[
				"apifile",
				"api/services/files.js"
			],
			[
				"yk",
				"contrib/riak/yk_files_schema.xml"
			],
			[
				"schemima",
				"api/schema/image/schema.js"
			],
			[
				"apiima",
				"api/services/images.js"
			],
			[
				"apispins",
				"api/services/spins.js"
			],
			[
				"apibill",
				"api/services/billing.js"
			],
			[
				"apiacc",
				"api/services/accounts.js"
			],
			[
				"turn",
				"api/billing/plans/custom/TurnAndShoot.js"
			],
			[
				"hapro",
				"ansible/roles/haproxy/templates/haproxy.cfg"
			],
			[
				"servimage",
				"api/services/images.js"
			],
			[
				"digima",
				"ansible/roles/sirv-backend/tasks/digimarc.yml"
			],
			[
				"ansibsirvbamain",
				"ansible/roles/sirv-backend/tasks/main.yml"
			],
			[
				"serima",
				"api/services/images.js"
			],
			[
				"spins",
				"api/services/spins.js"
			],
			[
				"schemacc",
				"api/schema/account.js"
			],
			[
				"apispin",
				"api/services/spins.js"
			],
			[
				"ykac",
				"contrib/riak/yk_accounts_schema.xml"
			],
			[
				"crefiles",
				"ansible/roles/sirv-backend/templates/create-files-schema.js"
			],
			[
				"cache",
				"ansible/roles/sirv-backend/templates/nginx/lua/cache_get.lua"
			],
			[
				"filec",
				"files/controller.js"
			],
			[
				"schemimas",
				"api/schema/image/schema.js"
			],
			[
				"testapiim",
				"test/api/06.images.js"
			],
			[
				"50.",
				"ansible/roles/sirv-backend/templates/nginx/50.www.sirv.com.conf"
			],
			[
				"schcanv",
				"api/schema/image/canvas.js"
			],
			[
				"schemca",
				"api/schema/image/canvas.js"
			],
			[
				"schespin",
				"api/schema/spin.js"
			],
			[
				"testspin",
				"test/api/spins.detection.js"
			],
			[
				"pfs",
				"lib/pfs.js"
			],
			[
				"embed.",
				"contrib/digimarc/embed.cc"
			],
			[
				"commtama",
				"ansible/roles/common/tasks/main.yml"
			],
			[
				"apicdn",
				"api/services/cdn.js"
			],
			[
				"filecon",
				"files/controller.js"
			],
			[
				"testmaim",
				"test/manual/images.js"
			],
			[
				"ansirolesirv-batama",
				"ansible/roles/sirv-backend/tasks/main.yml"
			],
			[
				"apifles",
				"api/services/files.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"ApiDuplicateEntryError"
			]
		],
		"width": 378.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 267.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
